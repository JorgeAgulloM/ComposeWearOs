package com.example.android.wearable.composestarter.presentation.screensimport androidx.compose.foundation.layout.*import androidx.compose.runtime.Composableimport androidx.compose.ui.Alignmentimport androidx.compose.ui.Modifierimport androidx.compose.ui.graphics.Colorimport androidx.compose.ui.res.painterResourceimport androidx.compose.ui.text.TextStyleimport androidx.compose.ui.text.font.FontWeightimport androidx.compose.ui.unit.dpimport androidx.compose.ui.unit.spimport androidx.navigation.NavControllerimport androidx.wear.compose.material.*import com.example.android.wearable.composestarter.Rimport com.example.android.wearable.composestarter.components.ReturnHomeimport com.example.android.wearable.composestarter.presentation.theme.wearColorPalette@Composablefun CardsScreen(navController: NavController) {    val state = rememberScalingLazyListState()    ScalingLazyColumn(        state = state,        flingBehavior = ScalingLazyColumnDefaults.snapFlingBehavior(state = state)    ) {        item {            ListHeader {                Row(                    modifier = Modifier.fillMaxWidth().padding(top = 16.dp),                    verticalAlignment = Alignment.CenterVertically,                    horizontalArrangement = Arrangement.Center                ) {                    Text(                        text = "Cards List Header",                        style = TextStyle(                            color = wearColorPalette.primaryVariant,                            fontWeight = FontWeight.Bold,                            fontSize = 16.sp                        )                    )                    ReturnHome(navController = navController)                }            }        }        items(10) { card ->            TitleCard(                modifier = Modifier                    .height(150.dp)                    .padding(vertical = 8.dp),                onClick = {},                title = { Text(text = "Card") },                backgroundPainter = CardDefaults.imageWithScrimBackgroundPainter(                    backgroundImagePainter = painterResource(id = R.drawable.ntt_data)                ),                contentColor = MaterialTheme.colors.onSurface,                titleColor = MaterialTheme.colors.onSurface            ) {                Text(text = "Hello from Card nยบ $card")            }        }    }}