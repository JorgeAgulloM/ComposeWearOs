package com.example.android.wearable.composestarter.presentation.screensimport androidx.compose.foundation.backgroundimport androidx.compose.foundation.layout.*import androidx.compose.runtime.Composableimport androidx.compose.runtime.rememberCoroutineScopeimport androidx.compose.ui.Modifierimport androidx.compose.ui.platform.LocalDensityimport androidx.compose.ui.unit.dpimport androidx.navigation.NavControllerimport androidx.wear.compose.material.*import com.example.android.wearable.composestarter.components.ReturnHomeimport com.example.android.wearable.composestarter.utils.Constants.LOREM_IPSUMimport kotlinx.coroutines.launch@Composablefun ChipAndScalingLazyColumnScreen(navController: NavController) {    val coroutineScope = rememberCoroutineScope()    val itemSpacing = 6.dp    val scrollOffSet = with(LocalDensity.current) {        -(itemSpacing / 2).roundToPx()    }    val state = rememberScalingLazyListState(        initialCenterItemIndex = 1,        initialCenterItemScrollOffset = scrollOffSet    )    Column(modifier = Modifier.fillMaxSize()) {        ReturnHome(navController = navController)        ScalingLazyColumn(            anchorType = ScalingLazyListAnchorType.ItemStart,            verticalArrangement = Arrangement.spacedBy(itemSpacing),            state = state,            autoCentering = AutoCenteringParams(itemOffset = scrollOffSet)        ) {            item {                ListHeader {                    Text(text = "Chips List Header")                }            }            val quotes = LOREM_IPSUM.split(".").count() - 1            items(items = LOREM_IPSUM.split(".").subList(0, quotes)) { quote ->                Chip(                    onClick = {                        coroutineScope.launch {                            state.animateScrollToItem(quote.length + 1, scrollOffSet)                        }                    },                    label = { Text("$quote.") },                    colors = ChipDefaults.secondaryChipColors()                )            }        }    }}