package com.example.android.wearable.composestarter.presentation.screensimport androidx.compose.foundation.BorderStrokeimport androidx.compose.foundation.borderimport androidx.compose.foundation.layout.*import androidx.compose.foundation.lazy.LazyColumnimport androidx.compose.foundation.lazy.LazyListStateimport androidx.compose.foundation.lazy.itemsimport androidx.compose.foundation.shape.RoundedCornerShapeimport androidx.compose.runtime.Composableimport androidx.compose.ui.Alignmentimport androidx.compose.ui.Modifierimport androidx.compose.ui.draw.clipimport androidx.compose.ui.graphics.Colorimport androidx.compose.ui.graphics.RectangleShapeimport androidx.compose.ui.text.TextStyleimport androidx.compose.ui.text.font.FontWeightimport androidx.compose.ui.text.style.TextAlignimport androidx.compose.ui.unit.dpimport androidx.compose.ui.unit.spimport androidx.navigation.NavControllerimport androidx.wear.compose.material.Textimport com.example.android.wearable.composestarter.utils.LOREM_IPSUM@Composablefun TextsScreen(navController: NavController) {    Column(modifier = Modifier.fillMaxSize()) {        Text(            modifier = Modifier                .fillMaxWidth()                .padding(top = 24.dp, start = 16.dp, end = 16.dp, bottom = 4.dp),            style = TextStyle(                textAlign = TextAlign.Center,                fontSize = 24.sp,                fontWeight = FontWeight.Bold,                color = Color.Green.copy(alpha = 0.8f)            ),            text = "Example Text"        )        LazyColumn(            modifier = Modifier.fillMaxWidth(),            state = LazyListState(),            verticalArrangement = Arrangement.Center,            horizontalAlignment = Alignment.CenterHorizontally        ) {            val quotes = LOREM_IPSUM.split(".").count() -1            items(items = LOREM_IPSUM.split(".").subList(0, quotes)) { quote ->                Text(                    modifier = Modifier                        .fillMaxWidth(0.9f)                        .padding(8.dp)                        .border(                            border = BorderStroke(1.dp, color = Color.Green.copy(alpha = 0.6f)),                            shape = RoundedCornerShape(12.dp)                        ),                    text = "$quote.",                    textAlign = TextAlign.Center                )            }        }    }}